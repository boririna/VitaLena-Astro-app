---
// import { Icon } from 'astro-icon';
import ButtonGrey from "./ButtonGrey.astro";
export interface Props {
	titleRev: string;
	bodyRev1: Array<string>;
	bodyRev2: string;
	hrefRev: string;
	imgPathRev: string;
	collapseLinkIdRev: string;
}

const { imgPathRev, hrefRev, titleRev, bodyRev1, bodyRev2, collapseLinkIdRev} = Astro.props;
---

<div class="card">
	<div class="card-img-text">
		<div class="card-text">
			<div class="card-title-button">
				<h2>{titleRev}</h2>
				<div class="card-button">
					<ButtonGrey href="/contacts/" text="MASSAGE BUCHEN" />
				</div>
			</div>
			<div>
				{bodyRev1.map((parag) => <p>{parag}</p>)}
				<p id={collapseLinkIdRev} class="card-link-rev">weiterlesen</p> 
			</div>	
		</div>
		<img src={imgPathRev} class="card-img" alt="Klassische Massage" />
	</div>
	<div class="collapsed-text">
		<div id={collapseLinkIdRev + "text"} class="card-text-rest">
			<div set:html={bodyRev2}></div>
		</div>
	</div>	
</div>

<script>	
	let collapsRev = document.getElementsByClassName("card-link-rev");
	let i = 0;

	for (i = 0; i < collapsRev.length; i++) {
		collapsRev[i].addEventListener("click", function() {		
		let textIdRev = this.id + "text"
		let textElementRev = document.getElementById(textIdRev)
		if (this.innerHTML === "weiterlesen") {
			this.innerHTML = "schlissen";
		} else {
			this.innerHTML = "weiterlesen";
		}
		if (textElementRev.style.display === "block") {
			textElementRev.style.display = "none";
		} else {
			textElementRev.style.display = "block";
		}
	  }
	  );
	}
</script>

<style>
	.card {
		background-color: rgba(255, 255, 255, 0.674);
		border-radius: 4px;
		margin-bottom: 20px;
	}

	.card-img-text {
		display: flex;		
	}

	h1,
	h2,
	h3 {
		color: #8e9aaf;
	}

	.card-img {
		width: 50%;
		height: 100%;
		border-radius: 0 4px 4px 0;
		float: left;
	}

	.card-title-button {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 20px;
		flex-flow: wrap;
	}

	.card-text {
		max-width: 470px;
		padding: 20px;
	}

	.card-text p {
		text-align: left;
	}

	.card-link-rev {
		color: #aaaaaa;
		cursor: pointer;
		padding-top: 20px;
	}

	.card-text-rest {
		display: none;
		padding: 20px 20px 20px 20px; 
	}

	details {
		user-select: none;
	}

	details > summary span.icon {
		width: 24px;
		height: 24px;
		transition: all 0.3s;
		margin-left: auto;
	}

	details[open] summary span.icon {
		transform: rotate(180deg);
	}

	summary {
		display: flex;
		cursor: pointer;
	}

	summary::-webkit-details-marker {
		display: none;
	}

	@media (max-width: 900px) {

		.card-text {
			max-width: 100%;
		}

		.card {
			width: 100%;
		}

		.card-img-text {
			flex-flow: wrap;
			flex-wrap: wrap-reverse;
		}

		.card-img {
			width: 100%;
		}

		.card-button {
			margin-top: 10px;
		}

		.card-link {
			padding-bottom: 0;
		}

		.card-text-rest {
			padding-top: 0;
		}
	}

	@media (max-width: 600px) {
		.card-img-text {
			flex-flow: wrap;
			flex-wrap: wrap-reverse;
		}

		.cards h1 {
			font-size: 26px;
		}

		.card-text h2 {
			font-size: 22px;
		}

		.card-img {
			width: 100%;
		}

		.card-title-button {
			flex-wrap: wrap;
		}

		.card-button {
			margin-top: 10px;
		}

		.card-text p {
			font-size: 18px;
		}

		.card-text-rest {
			font-size: 18px;
		}


		.card {
			width: 100%;
		}

		.card .button-grey {
			margin: 0 auto;
		}
	}
</style>
