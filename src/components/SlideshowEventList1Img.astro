---
import { Icon } from "astro-icon";
import Review from "./Review.astro";
import json from "../data/reviews.json";

export interface Props {
  slideImg1: string;
  slideImg2: string;
  slideImg3: string;
  slideImg4: string;
}

const { slideImg1, slideImg2, slideImg3, slideImg4 } = Astro.props;
// const response = await fetch("http://localhost:3000//reviews.json");
const data = json;
console.log(data);
---

<!-- Slider container -->
<div class="slider-mobile">
  <!-- slide 1 -->
  {
    data.map((review) => (
      <Review name={review.name} date={review.date} text={review.text} />
    ))
  }

  <!-- Control buttons -->
  <button class="btn-m btn-next-m">
    <Icon name="fa-solid:chevron-right" class="btn-icon" />
  </button>
  <button class="btn-m btn-prev-m">
    <Icon name="fa-solid:chevron-left" class="btn-icon" />
  </button>
</div>

<script>
  // Select all slides
  const slides = document.querySelectorAll(".slide-mobile");

  // loop through slides and set each slides translateX
  slides.forEach((slide, indx) => {
    slide.style.transform = `translateX(${indx * 100}%)`;
  });

  // select next slide button
  const nextSlide = document.querySelector(".btn-next-m");

  // current slide counter
  let curSlide = 0;
  // maximum number of slides
  let maxSlide = slides.length - 1;

  // add event listener and navigation functionality
  nextSlide.addEventListener("click", function () {
    // check if current slide is the last and reset current slide
    if (curSlide === maxSlide) {
      curSlide = 0;
    } else {
      curSlide++;
    }

    //   move slide by -100%
    slides.forEach((slide, indx) => {
      slide.style.transform = `translateX(${100 * (indx - curSlide)}%)`;
    });
  });

  // select prev slide button
  const prevSlide = document.querySelector(".btn-prev-m");

  // add event listener and navigation functionality
  prevSlide.addEventListener("click", function () {
    // check if current slide is the first and reset current slide to last
    if (curSlide === 0) {
      curSlide = maxSlide;
    } else {
      curSlide--;
    }

    //   move slide by 100%
    slides.forEach((slide, indx) => {
      slide.style.transform = `translateX(${100 * (indx - curSlide)}%)`;
    });
  });
</script>

<style>
  .slider-mobile {
    width: 100%;
    /* max-width: 800px; */
    min-height: 300px;
    position: relative;
    overflow: hidden;
  }

  .slide-mobile {
    width: 100%;
    height: 100%;
    max-width: 1020px;
    position: absolute;
    transition: all 0.5s;
    display: flex;
    gap: 16px;
    padding-right: 1px;
  }

  .slide-text {
    width: 100%;
    display: flex;
    align-items: center;
    background-color: rgba(255, 255, 255, 0.674);
    padding: 20px;
    border-radius: 4px;
  }

  /* .slide-text-vertical-center {
    width: 100%;
    display: flex;
    align-items: center;
    background-color: rgba(255, 255, 255, 0.674);
    padding: 20px;
    border-radius: 4px;
  } */

  .slide-text :first-child,
  .slide-text-vertical-center :first-child {
    padding-bottom: 10px;
  }

  .slider-mobile img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .btn-m {
    position: absolute;
    width: 40px;
    height: 40px;
    padding: 10px;
    border: none;
    border-radius: 50%;
    z-index: 10px;
    cursor: pointer;
    background-color: #feeafa;
    opacity: 0.8;
    font-size: 18px;
  }

  .btn-m:active {
    transform: scale(1.1);
  }

  .btn-icon {
    height: 20px;
    color: #8e9aaf;
  }

  .btn-prev-m {
    top: 45%;
    left: 2%;
  }

  .btn-next-m {
    top: 45%;
    right: 2%;
  }

  @media (max-width: 960px) {
  }

  @media (max-width: 600px) {
    .slider-desktop {
      display: none;
    }

    .slider-mobile {
      display: block;
      width: 100%;
      height: 370px;
      position: relative;
      overflow: hidden;
    }
    .slide-mobile {
      /* width: 100%; ampty review  */
    }
  }
</style>
